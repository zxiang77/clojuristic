aapiVersion: v1
# better reference:
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html/getting_started_with_kubernetes/get_started_provisioning_storage_in_kubernetes
kind: PersistentVolume
metadata:
  name: backend-src
spec:
  capacity:
    storage: 500M
  volumeMode: Filesystem
  # https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-mode
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  local:
    path: /home/docker
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: name 
          operator: In
          values:
          - webapp 
---
piVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: myapp-pv-claim
  labels:
    app: myapp 
spec:
  accessModes:
   - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 500M
# spec:
#   storageClassName: local-storage
#   resources:
#     requests:
#       storage: 500M
#   accessModes:
#     - ReadWriteOnce
---
apiVersion: v1
kind: Pod
metadata:
  name: backend
spec:
  containers:
    - name: c-backend
      image: backend:latest
      imagePullPolicy: Never
      volumeMounts:
      - name: backend-src 
        mountPath: /app/src 
  volumes:
    - name: backend-src 
      persistentVolumeClaim:
        claimName: myapp-pv-claim 
  nodeSelector:
    name: webapp
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
  # name: webapp
# spec:
  # replicas: 1
  # selector:
    # matchLabels:
      # run: webapp 
  # template:
    # metadata:
      # labels:
        # run: webapp
    # spec:
      # containers:
        # - name: backend
          # image: backend:latest
          # imagePullPolicy: Never
          # volumeMounts: 
            # - mountPath: /app
              # name: backend-src-vol
          # ports:
            # - containerPort: 3000
      # volumes:
        # - name: backend-src-vol
          # hostPath:
            # path: /Users/ziliz/projects/clojuristic/src
            # type: Directory
# todo: create the rest of the application and write docs for huohuo
# todo: only create volume for /data for mongod , use pods for other components
# needed to figure how to deploy pods
